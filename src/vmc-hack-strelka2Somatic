#! /usr/bin/env bash

# Add GT (genotype) annotation to VCF produced by strelka2Somatic

outputType=v
caseSample=TUMOR
controlSample=NORMAL

while getopts "O:a:b:" opt; do
    case $opt in
        O) outputType=$OPTARG;;
        a) caseSample=$OPTARG;;
        b) controlSample=$OPTARG;;
    esac
done
shift $(($OPTIND - 1))
invcf=$1

usage="usage: `basename $0` [-O v|z -a caseSample -b controlSample] invcf > outvcf"
if test $# -eq 0; then
    echo $usage; exit 0
fi

# temp files for VCF pieces
part1=`tempfile`
GT=`tempfile`
format=`tempfile`
GTformat=`tempfile`
sample1=`tempfile`
sample2=`tempfile`
GT1=`tempfile`
GT2=`tempfile`
GT1sample1=`tempfile`
GT2sample2=`tempfile`
outvcf=`tempfile`

# smaller pieces of output
bcftools view -H $invcf | cut -f 1-8 >> $part1
bcftools view -H $invcf | cut -f 9 >> $format
bcftools view -H $invcf | cut -f 10 >> $sample1
bcftools view -H $invcf | cut -f 11 >> $sample2
sed 's/.*/GT:/' $part1 >> $GT
sed 's/.*/0\/0:/' $part1 >> $GT1
sed 's/.*/0\/1:/' $part1 >> $GT2

# larger pieces of output
bcftools view -h $invcf | sed '/^##FORMAT/q' >> $outvcf
echo '##FORMAT=<ID=GT,Number=1,Type=String,Description="Genotype">' >> $outvcf
bcftools view -h $invcf | sed -n '/^##FORMAT/,$ p' | sed -n '2,$ p' >> $outvcf
paste -d '' $GT $format >> $GTformat
paste -d '' $GT1 $sample1 >> $GT1sample1
paste -d '' $GT2 $sample2 >> $GT2sample2

# entire output in desired type; clean-up
paste $part1 $GTformat $GT1sample1 $GT2sample2 >> $outvcf
bcftools view -O $outputType $outvcf
rm $part1 $GT $format $GTformat $sample1 $sample2 $GT1 $GT2 $GT1sample1 $GT2sample2 $outvcf
